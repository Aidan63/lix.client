#!/usr/bin/env node

// Generated by Haxe 3.4.0
if (typeof process !== "undefined") if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");

(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Sys = function() { };
Sys.__name__ = true;
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		return _g;
	}
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCharCode(c));
	}
	,writeBytes: function(s,pos,len) {
		return js_node_Fs.writeSync(this.fd,new js_node_buffer_Buffer(s.b.bufferValue),pos,len);
	}
	,writeString: function(s) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_crypto_Md5 = function() {
};
haxe_crypto_Md5.__name__ = true;
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	return m.hex(m.doEncode(haxe_crypto_Md5.str2blks(s)));
};
haxe_crypto_Md5.str2blks = function(str) {
	var str1 = haxe_io_Bytes.ofString(str);
	var nblk = (str1.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g1 = 0;
	while(_g1 < blksSize) blks[_g1++] = 0;
	var i = 0;
	var max = str1.length;
	var l = max * 8;
	while(i < max) {
		blks[i >> 2] |= str1.b[i] << (l + i) % 4 * 8;
		++i;
	}
	blks[i >> 2] |= 128 << (l + i) % 4 * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] = (blks[k] |= (l >>> 8 & 255) << 8) | (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		return (a >>> 1 | b >>> 1) << 1 | (a & 1 | b & 1);
	}
	,bitXOR: function(a,b) {
		return (a >>> 1 ^ b >>> 1) << 1 | a & 1 ^ b & 1;
	}
	,bitAND: function(a,b) {
		return (a >>> 1 & b >>> 1) << 1 | a & 1 & (b & 1);
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		return (x >> 16) + (y >> 16) + (lsw >> 16) << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += "0123456789abcdef".charAt(num >> j * 8 + 4 & 15) + "0123456789abcdef".charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Eof = function() { };
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
haxe_io_Path.__name__ = true;
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.removeTrailingSlashes = function(path) {
	try {
		while(true) {
			var _g = HxOverrides.cca(path,path.length - 1);
			if(_g == null) {
				throw "__break__";
			} else {
				switch(_g) {
				case 47:case 92:
					path = HxOverrides.substr(path,0,-1);
					break;
				default:
					throw "__break__";
				}
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	return path;
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxeshim_Exec = function() { };
haxeshim_Exec.__name__ = true;
haxeshim_Exec.mergeEnv = function(add) {
	var ret = Reflect.copy(process.env);
	var _g = 0;
	var _g1 = Reflect.fields(add);
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		ret[name] = add[name];
	}
	return ret;
};
haxeshim_Exec.shell = function(cmd,cwd,env) {
	try {
		return tink_core_Outcome.Success(js_node_ChildProcess.execSync(cmd,{ cwd : cwd, stdio : "inherit", env : haxeshim_Exec.mergeEnv(env)}));
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(new tink_core_TypedError(e.status,"Failed to invoke `" + cmd + "` because " + Std.string(e),{ fileName : "Exec.hx", lineNumber : 26, className : "haxeshim.Exec", methodName : "shell"}));
	}
};
var haxeshim_HaxeCli = function(scope) {
	this.scope = scope;
};
haxeshim_HaxeCli.__name__ = true;
haxeshim_HaxeCli.prototype = {
	installLibs: function(silent) {
		var i = this.scope.getInstallationInstructions();
		var code = 0;
		var _g = i.missing;
		if(_g.length != 0) {
			code = 404;
			var _g1 = 0;
			while(_g1 < _g.length) {
				var m = _g[_g1];
				++_g1;
				new _$Sys_FileOutput(2).writeString("" + m.lib + " has no install instruction for missing classpath " + m.cp + "\n");
			}
		}
		var _g11 = 0;
		var _g2 = i.instructions;
		while(_g11 < _g2.length) {
			var cmd = _g2[_g11];
			++_g11;
			if(!silent) {
				process.stdout.write(cmd == null ? "null" : "" + cmd);
				process.stdout.write("\n");
			}
			var _g3 = haxeshim_Exec.shell(cmd,process.cwd());
			if(_g3[1] == 1) {
				code = _g3[2].code;
			}
		}
		process.exit(code);
	}
	,__class__: haxeshim_HaxeCli
};
var haxeshim_Scope = function(haxeshimRoot,isGlobal,scopeDir,cwd) {
	this.haxeshimRoot = haxeshimRoot;
	this.isGlobal = isGlobal;
	this.scopeDir = scopeDir;
	this.scopeLibDir = "" + scopeDir + "/haxe_libraries";
	this.cwd = cwd;
	this.configFile = "" + scopeDir + "/" + haxeshim_Scope.CONFIG_FILE;
	this.versionDir = "" + haxeshimRoot + "/versions";
	this.haxelibRepo = "" + haxeshimRoot + "/haxelib";
	this.libCache = "" + haxeshimRoot + "/haxe_libraries";
	this.reload();
};
haxeshim_Scope.__name__ = true;
haxeshim_Scope.seek = function(options) {
	if(options == null) {
		options = { };
	}
	var cwd;
	var _g = options.cwd;
	if(_g == null) {
		cwd = process.cwd();
	} else {
		cwd = _g;
	}
	var startLookingIn;
	var _g1 = options.startLookingIn;
	if(_g1 == null) {
		startLookingIn = cwd;
	} else {
		startLookingIn = _g1;
	}
	var haxeshimRoot;
	var _g2 = options.haxeshimRoot;
	if(_g2 == null) {
		haxeshimRoot = haxeshim_Scope.DEFAULT_ROOT;
	} else {
		haxeshimRoot = _g2;
	}
	var f = function(haxeshimRoot1,isGlobal,scopeDir,cwd1) {
		return new haxeshim_Scope(haxeshimRoot1,isGlobal,scopeDir,cwd1);
	};
	var a1 = haxeshimRoot;
	var a4 = cwd;
	var make = function(a2,a3) {
		return f(a1,a2,a3,a4);
	};
	var $global = function() {
		return make(true,haxeshimRoot);
	};
	var dig = null;
	dig = function(cur) {
		var _hx_tmp;
		var _hx_tmp1;
		_hx_tmp = sys_FileSystem.exists("" + cur + "/" + haxeshim_Scope.CONFIG_FILE);
		if(_hx_tmp == true) {
			return make(false,cur);
		} else {
			switch(cur) {
			case "":case "/":
				return $global();
			default:
				_hx_tmp1 = cur.split(":");
				if(_hx_tmp1.length == 2) {
					if(_hx_tmp1[1] == "") {
						if(haxeshim_Scope.IS_WINDOWS && _hx_tmp1[0].length == 1) {
							return $global();
						} else {
							var dig1 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
							return dig(dig1);
						}
					} else {
						var dig2 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
						return dig(dig2);
					}
				} else {
					var dig3 = haxe_io_Path.removeTrailingSlashes(haxe_io_Path.directory(cur));
					return dig(dig3);
				}
			}
		}
	};
	var tmp = haxe_io_Path.removeTrailingSlashes(js_node_Path.resolve(startLookingIn));
	return dig(tmp);
};
haxeshim_Scope.prototype = {
	reload: function() {
		var src;
		try {
			src = js_node_Fs.readFileSync(this.configFile,{ encoding : "utf8"});
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(this.isGlobal) {
				throw new js__$Boot_HaxeError("Global config file " + this.configFile + " does not exist or cannot be opened");
			} else {
				throw new js__$Boot_HaxeError("Unable to open file " + this.configFile + " because " + Std.string(e));
			}
		}
		var tmp;
		try {
			tmp = JSON.parse(src);
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			new _$Sys_FileOutput(2).writeString("Invalid JSON in file " + this.configFile + ":\n\n" + src + "\n\n");
			throw js__$Boot_HaxeError.wrap(e1);
		}
		this.config = tmp;
		if(this.config.version == null) {
			throw new js__$Boot_HaxeError("No version set in " + this.configFile);
		}
		var _g = this.config.resolveLibs;
		if(_g != null) {
			switch(_g) {
			case "haxelib":case "mixed":
				break;
			default:
				throw new js__$Boot_HaxeError("invalid value " + _g + " for `resolveLibs` in " + this.configFile);
			}
		}
		this.haxeInstallation = this.getInstallation(this.config.version);
		var tmp1 = this.cwd;
		var tmp2 = this.scopeLibDir;
		var tmp3 = this.config.resolveLibs;
		var _g1 = new haxe_ds_StringMap();
		var value = this.libCache;
		if(__map_reserved["HAXESHIM_LIBCACHE"] != null) {
			_g1.setReserved("HAXESHIM_LIBCACHE",value);
		} else {
			_g1.h["HAXESHIM_LIBCACHE"] = value;
		}
		this.resolver = new haxeshim_Resolver(tmp1,tmp2,tmp3,_g1);
	}
	,getInstallation: function(version) {
		return new haxeshim_HaxeInstallation("" + this.versionDir + "/" + version,version,this.haxelibRepo);
	}
	,getInstallationInstructions: function() {
		var missing = [];
		var instructions = [];
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(this.scopeLibDir);
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var path = "" + this.scopeLibDir + "/" + child;
			if(!js_node_Fs.statSync(path).isDirectory() && StringTools.endsWith(path,".hxml")) {
				var hxml = js_node_Fs.readFileSync(path,{ encoding : "utf8"});
				var args = haxeshim_Resolver.parseLines(hxml);
				var pos = 0;
				var max = args.length;
				while(pos < max) if(args[pos++] == "-cp") {
					var cp = args[pos++];
					if(!sys_FileSystem.exists(cp)) {
						var _g2 = hxml.split("@install:");
						var _hx_tmp;
						if(_g2.length == 1) {
							missing.push({ lib : child, cp : cp});
						} else {
							_hx_tmp = _g2.slice(1);
							var _g21 = 0;
							while(_g21 < _hx_tmp.length) {
								var i = _hx_tmp[_g21];
								++_g21;
								instructions.push(StringTools.trim(i.split("\n")[0]));
							}
						}
					}
				}
			}
		}
		return { missing : missing, instructions : instructions};
	}
	,__class__: haxeshim_Scope
};
var haxeshim_HaxeInstallation = function(path,version,haxelibRepo) {
	this.path = path;
	this.version = version;
	this.compiler = "" + path + "/haxe" + haxeshim_HaxeInstallation.EXT;
	this.haxelib = "" + path + "/haxelib" + haxeshim_HaxeInstallation.EXT;
	this.stdLib = "" + path + "/std";
	this.haxelibRepo = haxelibRepo;
};
haxeshim_HaxeInstallation.__name__ = true;
haxeshim_HaxeInstallation.prototype = {
	__class__: haxeshim_HaxeInstallation
};
var haxeshim_Resolver = function(cwd,libDir,mode,defaults) {
	this.cwd = cwd;
	this.libDir = libDir;
	this.mode = mode;
	this.defaults = defaults;
};
haxeshim_Resolver.__name__ = true;
haxeshim_Resolver.libHxml = function(libDir,libName) {
	return "" + libDir + "/" + libName + ".hxml";
};
haxeshim_Resolver.parseLines = function(source,normalize) {
	if(normalize == null) {
		normalize = function(x) {
			return [x];
		};
	}
	var ret = [];
	var _g = 0;
	var _g1 = source.split("\n").map(StringTools.trim);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		var _g2 = line.charAt(0);
		if(_g2 != null) {
			switch(_g2) {
			case "#":
				break;
			case "-":
				var _g21 = line.indexOf(" ");
				if(_g21 == -1) {
					ret.push(line);
				} else {
					ret.push(HxOverrides.substr(line,0,_g21));
					ret.push(StringTools.trim(HxOverrides.substr(line,_g21,null)));
				}
				break;
			default:
				var _g22 = StringTools.trim(line);
				if(_g22 != "") {
					var _g23 = 0;
					var _g3 = normalize(_g22);
					while(_g23 < _g3.length) {
						var a = _g3[_g23];
						++_g23;
						ret.push(a);
					}
				}
			}
		}
	}
	return ret;
};
haxeshim_Resolver.prototype = {
	__class__: haxeshim_Resolver
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_Http = require("http");
var js_node_Https = require("https");
var js_node_Path = require("path");
var js_node_Url = require("url");
var js_node_Zlib = require("zlib");
var js_node_buffer_Buffer = require("buffer").Buffer;
var lix_client_ArchiveKind = { __ename__ : true, __constructs__ : ["Zip","Tar"] };
lix_client_ArchiveKind.Zip = ["Zip",0];
lix_client_ArchiveKind.Zip.toString = $estr;
lix_client_ArchiveKind.Zip.__enum__ = lix_client_ArchiveKind;
lix_client_ArchiveKind.Tar = ["Tar",1];
lix_client_ArchiveKind.Tar.toString = $estr;
lix_client_ArchiveKind.Tar.__enum__ = lix_client_ArchiveKind;
var lix_client_ArchiveInfos = function(name,version,classPath) {
	this.name = name;
	this.version = version;
	this.classPath = classPath;
};
lix_client_ArchiveInfos.__name__ = true;
lix_client_ArchiveInfos.prototype = {
	__class__: lix_client_ArchiveInfos
};
var lix_client_DownloadedArchive = function(source,location) {
	this.savedAs = haxe_ds_Option.None;
	this.source = source;
	this.location = location;
	this.relRoot = lix_client_DownloadedArchive.seekRoot(location);
	this.infos = this.readInfos(haxe_io_Path.removeTrailingSlashes("" + this.location + "/" + this.relRoot));
};
lix_client_DownloadedArchive.__name__ = true;
lix_client_DownloadedArchive.seekRoot = function(path) {
	var _g = js_node_Fs.readdirSync(path);
	if(_g.length == 1) {
		var v = _g[0];
		if(js_node_Fs.statSync("" + path + "/" + v).isDirectory()) {
			return "" + v + "/" + lix_client_DownloadedArchive.seekRoot("" + path + "/" + v);
		} else {
			return "";
		}
	} else {
		return "";
	}
};
lix_client_DownloadedArchive.prototype = {
	saveAs: function(storageRoot,v) {
		var name;
		var _g = v.name;
		switch(_g[1]) {
		case 0:
			name = _g[2];
			break;
		case 1:
			var _g1 = this.infos.name;
			if(_g1 == null) {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"unable to determine library name of " + tink__$Url_Url_$Impl_$.toString(this.source),{ fileName : "Archives.hx", lineNumber : 71, className : "lix.client.DownloadedArchive", methodName : "saveAs"})));
			} else {
				name = _g1;
			}
			break;
		}
		var versionNumber;
		var _g11 = v.versionNumber;
		switch(_g11[1]) {
		case 0:
			versionNumber = _g11[2];
			break;
		case 1:
			versionNumber = this.infos.version;
			break;
		}
		var versionId;
		var _g2 = v.versionId;
		switch(_g2[1]) {
		case 0:
			versionId = _g2[2];
			break;
		case 1:
			versionId = "http/" + haxe_crypto_Md5.encode(tink__$Url_Url_$Impl_$.toString(this.source));
			break;
		}
		this.infos = new lix_client_ArchiveInfos(name,versionNumber,this.infos.classPath);
		var path = "" + name + "/" + versionNumber + "/" + versionId;
		var target = "" + storageRoot + "/" + path;
		if(sys_FileSystem.exists(target)) {
			js_node_Fs.renameSync(target,"" + target + "-archived@" + new Date().getTime());
		}
		switchx_Fs.ensureDir(target);
		js_node_Fs.renameSync(haxe_io_Path.removeTrailingSlashes("" + this.location + "/" + this.relRoot),target);
		this.location = storageRoot;
		this.relRoot = path;
		this.savedAs = haxe_ds_Option.Some(new lix_client_LibVersion(haxe_ds_Option.Some(name),haxe_ds_Option.Some(versionNumber),haxe_ds_Option.Some(versionId)));
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(this));
	}
	,readInfos: function(root) {
		var files = js_node_Fs.readdirSync(root);
		var guessClassPath = function() {
			if(files.indexOf("src") != -1) {
				return "src";
			} else if(files.indexOf("hx") != -1) {
				return "hx";
			} else {
				return "";
			}
		};
		if(files.indexOf("haxelib.json") != -1) {
			var info = JSON.parse(js_node_Fs.readFileSync("" + root + "/haxelib.json",{ encoding : "utf8"}));
			var _g = info.classPath;
			return new lix_client_ArchiveInfos(info.name,info.version,_g == null ? "" : _g);
		} else if(files.indexOf("package.json") != -1) {
			var info1 = JSON.parse(js_node_Fs.readFileSync("" + root + "/package.json",{ encoding : "utf8"}));
			return new lix_client_ArchiveInfos(info1.name,info1.version,guessClassPath());
		} else {
			return new lix_client_ArchiveInfos(null,"0.0.0",guessClassPath());
		}
	}
	,__class__: lix_client_DownloadedArchive
};
var lix_client_Cli = function() { };
lix_client_Cli.__name__ = true;
lix_client_Cli.main = function() {
	lix_client_Cli.dispatch(process.argv.slice(2));
};
lix_client_Cli.dispatch = function(args) {
	var silent = HxOverrides.remove(args,"--silent");
	var scope = haxeshim_Scope.seek({ cwd : HxOverrides.remove(args,"--global") ? haxeshim_Scope.DEFAULT_ROOT : null});
	var _g = args.indexOf("--gh-credentials");
	var github = new lix_client_sources_GitHub(_g == -1 ? null : args.splice(_g,2)[1]);
	var _g1 = new haxe_ds_StringMap();
	var value = lix_client_sources_Web;
	if(__map_reserved["http"] != null) {
		_g1.setReserved("http",value);
	} else {
		_g1.h["http"] = value;
	}
	var value1 = lix_client_sources_Web;
	if(__map_reserved["https"] != null) {
		_g1.setReserved("https",value1);
	} else {
		_g1.h["https"] = value1;
	}
	var value2 = lix_client_sources_Haxelib;
	if(__map_reserved["haxelib"] != null) {
		_g1.setReserved("haxelib",value2);
	} else {
		_g1.h["haxelib"] = value2;
	}
	if(__map_reserved["gh"] != null) {
		_g1.setReserved("gh",github);
	} else {
		_g1.h["gh"] = github;
	}
	if(__map_reserved["github"] != null) {
		_g1.setReserved("github",github);
	} else {
		_g1.h["github"] = github;
	}
	var resolvers = _g1;
	var client = new lix_client_Client(scope);
	var resolve = function(url) {
		var key = url.scheme;
		var _g2 = __map_reserved[key] != null ? resolvers.getReserved(key) : resolvers.h[key];
		if(_g2 == null) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Unknown scheme in url " + tink__$Url_Url_$Impl_$.toString(url),{ fileName : "Cli.hx", lineNumber : 44, className : "lix.client.Cli", methodName : "dispatch"})));
		} else {
			return _g2.processUrl(url);
		}
	};
	switchx_Command.dispatch(args,"lix - Libraries for haXe",[new switchx_Command("download","[<url> [as <lib[#ver]>]]","download lib from url if specified,\notherwise download missing libs",function(args1) {
		switch(args1.length) {
		case 0:
			new haxeshim_HaxeCli(scope).installLibs(silent);
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
		case 1:
			var this1 = resolve(tink__$Url_Url_$Impl_$.parse(args1[0]));
			return tink_core__$Promise_Promise_$Impl_$.noise(client.download(this1));
		case 3:
			if(args1[1] == "as") {
				var alias = args1[2];
				var this2 = resolve(tink__$Url_Url_$Impl_$.parse(args1[0]));
				var this3 = lix_client_LibVersion.parse(alias);
				return tink_core__$Promise_Promise_$Impl_$.noise(client.download(this2,this3));
			} else {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 59, className : "lix.client.Cli", methodName : "dispatch"})));
			}
			break;
		default:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 59, className : "lix.client.Cli", methodName : "dispatch"})));
		}
	}),new switchx_Command("install","<url> [as <lib[#ver]>]","install lib from specified url",function(args2) {
		switch(args2.length) {
		case 0:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Missing url",{ fileName : "Cli.hx", lineNumber : 69, className : "lix.client.Cli", methodName : "dispatch"})));
		case 1:
			var this4 = resolve(tink__$Url_Url_$Impl_$.parse(args2[0]));
			return client.install(this4);
		case 3:
			if(args2[1] == "as") {
				var alias1 = args2[2];
				var this5 = resolve(tink__$Url_Url_$Impl_$.parse(args2[0]));
				var this6 = lix_client_LibVersion.parse(alias1);
				return client.install(this5,this6);
			} else {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 70, className : "lix.client.Cli", methodName : "dispatch"})));
			}
			break;
		default:
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"too many arguments",{ fileName : "Cli.hx", lineNumber : 70, className : "lix.client.Cli", methodName : "dispatch"})));
		}
	})],[])(switchx_Command.reportError);
};
var lix_client_Client = function(scope) {
	this.scope = scope;
};
lix_client_Client.__name__ = true;
lix_client_Client.downloadArchiveInto = function(kind,url,tmpLoc) {
	var tmp;
	if(kind == null) {
		tmp = switchx_Download.archive(tink__$Url_Url_$Impl_$.toString(url),0,tmpLoc);
	} else {
		switch(kind[1]) {
		case 0:
			tmp = switchx_Download.zip(tink__$Url_Url_$Impl_$.toString(url),0,tmpLoc);
			break;
		case 1:
			tmp = switchx_Download.tar(tink__$Url_Url_$Impl_$.toString(url),0,tmpLoc);
			break;
		}
	}
	return tink_core__$Promise_Promise_$Impl_$.next(tmp,function(dir) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(new lix_client_DownloadedArchive(url,dir)));
	});
};
lix_client_Client.prototype = {
	download: function(a,$as) {
		var _gthis = this;
		return tink_core__$Promise_Promise_$Impl_$.next(a,function(a1) {
			return tink_core__$Promise_Promise_$Impl_$.next(lix_client_Client.downloadArchiveInto(a1.kind,a1.url,_gthis.scope.haxeshimRoot + "/downloads/download@" + new Date().getTime()),function(res) {
				return res.saveAs(_gthis.scope.libCache,a1.lib.merge($as));
			});
		});
	}
	,install: function(a,$as) {
		var _gthis = this;
		return tink_core__$Promise_Promise_$Impl_$.next(this.download(a,$as),function(a1) {
			var extra;
			var _g = "" + haxe_io_Path.removeTrailingSlashes("" + a1.location + "/" + a1.relRoot) + "/extraParams.hxml";
			if(sys_FileSystem.exists(_g)) {
				extra = js_node_Fs.readFileSync(_g,{ encoding : "utf8"});
			} else {
				extra = "";
			}
			var hxml = haxeshim_Resolver.libHxml(_gthis.scope.scopeLibDir,a1.infos.name);
			switchx_Fs.ensureDir(hxml);
			var target;
			var _g1 = a1.savedAs;
			switch(_g1[1]) {
			case 0:
				target = "as " + _g1[2].toString();
				break;
			case 1:
				target = "";
				break;
			}
			var deps;
			var _g2 = "" + haxe_io_Path.removeTrailingSlashes("" + a1.location + "/" + a1.relRoot) + "/haxelib.json";
			if(sys_FileSystem.exists(_g2)) {
				var _g21 = [];
				var _g3 = 0;
				var _g4 = Reflect.fields(JSON.parse(js_node_Fs.readFileSync(_g2,{ encoding : "utf8"})).dependencies);
				while(_g3 < _g4.length) {
					var key = _g4[_g3];
					++_g3;
					_g21.push("-lib " + key);
				}
				deps = _g21;
			} else {
				deps = [];
			}
			js_node_Fs.writeFileSync(hxml,["# @install: lix download " + tink__$Url_Url_$Impl_$.toString(a1.source) + " " + target,"-D " + a1.infos.name + "=" + a1.infos.version,"-cp $" + "{HAXESHIM_LIBCACHE}/" + a1.relRoot + "/" + a1.infos.classPath,extra].concat(deps).join("\n"));
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
		});
	}
	,__class__: lix_client_Client
};
var lix_client_LibVersion = function(name,versionNumber,versionId) {
	this.name = name;
	this.versionNumber = versionNumber;
	this.versionId = versionId;
};
lix_client_LibVersion.__name__ = true;
lix_client_LibVersion.parse = function(s) {
	var make = function(name,version) {
		var ret = new lix_client_LibVersion(haxe_ds_Option.Some(name),haxe_ds_Option.None,haxe_ds_Option.None);
		var _g = version.indexOf("/");
		if(_g == -1) {
			ret.versionNumber = haxe_ds_Option.Some(version);
		} else {
			ret.versionNumber = haxe_ds_Option.Some(HxOverrides.substr(version,0,_g));
			ret.versionId = haxe_ds_Option.Some(HxOverrides.substr(version,_g + 1,null));
		}
		return ret;
	};
	var _g1 = s.indexOf("#");
	if(_g1 == -1) {
		return make(s,"");
	} else {
		return make(s.substring(0,_g1),s.substring(_g1 + 1));
	}
};
lix_client_LibVersion.prototype = {
	or: function(a,b) {
		if(a[1] == 0) {
			return a;
		} else {
			return b;
		}
	}
	,toString: function() {
		var _g = this.name;
		switch(_g[1]) {
		case 0:
			var v = _g[2];
			var _g1 = this.versionNumber;
			var tmp;
			switch(_g1[1]) {
			case 0:
				var tmp1 = "#" + _g1[2];
				var _g2 = this.versionId;
				var tmp2;
				switch(_g2[1]) {
				case 0:
					tmp2 = "/" + _g2[2];
					break;
				case 1:
					tmp2 = "";
					break;
				}
				tmp = tmp1 + tmp2;
				break;
			case 1:
				tmp = "";
				break;
			}
			return v + tmp;
		case 1:
			return "";
		}
	}
	,merge: function($as) {
		if($as == null) {
			return this;
		}
		return new lix_client_LibVersion(this.or($as.name,this.name),this.or($as.versionNumber,this.versionNumber),this.or($as.versionId,this.versionId));
	}
	,__class__: lix_client_LibVersion
};
var lix_client_sources_GitHub = function(credentials) {
	if(credentials == null) {
		credentials = "";
	}
	var _g = StringTools.trim(credentials);
	this.credentials = _g == "" ? "" : "" + _g + "@";
};
lix_client_sources_GitHub.__name__ = true;
lix_client_sources_GitHub.prototype = {
	grabCommit: function(owner,project,version) {
		return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.text("https://" + this.credentials + "api.github.com/repos/" + owner + "/" + project + "/commits?sha=" + version),function(s) {
			try {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(JSON.parse(s)[0].sha));
			} catch( e ) {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"Failed to lookup sha for github:" + owner + "/" + project + (version == null ? "" : version == "" ? "" : "#" + version),{ fileName : "GitHub.hx", lineNumber : 24, className : "lix.client.sources.GitHub", methodName : "grabCommit"})));
			}
		});
	}
	,getArchive: function(owner,project,commitish) {
		if(commitish == null) {
			var f = $bind(this,this.getArchive);
			var a1 = owner;
			var a2 = project;
			var tmp = function(a3) {
				return f(a1,a2,a3);
			};
			return tink_core__$Promise_Promise_$Impl_$.next(this.grabCommit(owner,project,""),tmp);
		} else if(commitish.length == 40) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success({ url : tink__$Url_Url_$Impl_$.parse("https://" + this.credentials + "github.com/" + owner + "/" + project + "/archive/" + commitish + ".tar.gz"), lib : new lix_client_LibVersion(haxe_ds_Option.Some(project),haxe_ds_Option.None,haxe_ds_Option.Some(commitish))}));
		} else {
			var f1 = $bind(this,this.getArchive);
			var a11 = owner;
			var a21 = project;
			var tmp1 = function(a31) {
				return f1(a11,a21,a31);
			};
			return tink_core__$Promise_Promise_$Impl_$.next(this.grabCommit(owner,project,commitish),tmp1);
		}
	}
	,processUrl: function(url) {
		var _g = url.path;
		var _hx_tmp;
		if(_g == null) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"invalid github url " + tink__$Url_Url_$Impl_$.toString(url),{ fileName : "GitHub.hx", lineNumber : 43, className : "lix.client.sources.GitHub", methodName : "processUrl"})));
		} else {
			_hx_tmp = tink_url__$Path_Path_$Impl_$.parts(_g);
			if(_hx_tmp.length == 2) {
				var project = _hx_tmp[1];
				return this.getArchive(tink_url__$Portion_Portion_$Impl_$.stringly(_hx_tmp[0]),tink_url__$Portion_Portion_$Impl_$.stringly(project),url.hash);
			} else {
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"invalid github url " + tink__$Url_Url_$Impl_$.toString(url),{ fileName : "GitHub.hx", lineNumber : 45, className : "lix.client.sources.GitHub", methodName : "processUrl"})));
			}
		}
	}
	,__class__: lix_client_sources_GitHub
};
var lix_client_sources_Haxelib = function() { };
lix_client_sources_Haxelib.__name__ = true;
lix_client_sources_Haxelib.processUrl = function(url) {
	var _g = url.path;
	var _hx_tmp;
	if(_g == null) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"invalid haxelib url " + tink__$Url_Url_$Impl_$.toString(url),{ fileName : "Haxelib.hx", lineNumber : 7, className : "lix.client.sources.Haxelib", methodName : "processUrl"})));
	} else {
		_hx_tmp = tink_url__$Path_Path_$Impl_$.parts(_g);
		if(_hx_tmp.length == 1) {
			return lix_client_sources_Haxelib.getArchive(tink_url__$Portion_Portion_$Impl_$.stringly(_hx_tmp[0]),url.hash);
		} else {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(null,"invalid haxelib url " + tink__$Url_Url_$Impl_$.toString(url),{ fileName : "Haxelib.hx", lineNumber : 9, className : "lix.client.sources.Haxelib", methodName : "processUrl"})));
		}
	}
};
lix_client_sources_Haxelib.getArchive = function(name,version) {
	if(version == null) {
		var a1 = name;
		var tmp = function(a2) {
			return lix_client_sources_Haxelib.getArchive(a1,a2);
		};
		return tink_core__$Promise_Promise_$Impl_$.next(lix_client_sources_Haxelib.resolveVersion(name),tmp);
	} else {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success({ url : tink__$Url_Url_$Impl_$.parse("https://lib.haxe.org/p/" + name + "/" + version + "/download/"), kind : lix_client_ArchiveKind.Zip, lib : new lix_client_LibVersion(haxe_ds_Option.Some(name),haxe_ds_Option.Some(version),haxe_ds_Option.Some("haxelib"))}));
	}
};
lix_client_sources_Haxelib.resolveVersion = function(name) {
	return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.text("https://lib.haxe.org/p/" + name),function(s) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(s.split(")</title>")[0].split("(").pop()));
	});
};
var lix_client_sources_Web = function() { };
lix_client_sources_Web.__name__ = true;
lix_client_sources_Web.processUrl = function(url) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success({ url : url, lib : new lix_client_LibVersion(haxe_ds_Option.None,haxe_ds_Option.None,haxe_ds_Option.None)}));
};
var switchx_Command = function(name,args,doc,exec) {
	this.name = name;
	this.args = args;
	this.doc = doc;
	this.exec = exec;
};
switchx_Command.__name__ = true;
switchx_Command.reportError = function(o) {
	if(o[1] == 1) {
		var e = o[2];
		new _$Sys_FileOutput(2).writeString(e.message + "\n\n");
		process.exit(e.code);
	}
};
switchx_Command.dispatch = function(args,title,commands,extras) {
	var _g = args.shift();
	if(_g == null) {
		process.stdout.write(title == null ? "null" : "" + title);
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var prefix = 0;
		var _g1 = 0;
		while(_g1 < commands.length) {
			var c = commands[_g1];
			++_g1;
			var cur = c.name.length + c.args.length;
			if(cur > prefix) {
				prefix = cur;
			}
		}
		prefix += 7;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = prefix;
		while(_g21 < _g11) {
			++_g21;
			_g2.push(" ");
		}
		var prefix1 = _g2.join("");
		var pad = function(s) {
			return StringTools.lpad(s," ",prefix1.length);
		};
		process.stdout.write("  Supported commands:");
		process.stdout.write("\n");
		process.stdout.write("");
		process.stdout.write("\n");
		var _g12 = 0;
		while(_g12 < commands.length) {
			var c1 = commands[_g12];
			++_g12;
			var v = pad("  " + c1.name + " " + c1.args + " : ") + StringTools.replace(c1.doc,"\n","\n" + prefix1);
			process.stdout.write(Std.string(v));
			process.stdout.write("\n");
		}
		var _g13 = 0;
		while(_g13 < extras.length) {
			var e = extras[_g13];
			++_g13;
			process.stdout.write("");
			process.stdout.write("\n");
			process.stdout.write(Std.string("  " + e.name));
			process.stdout.write("\n");
			process.stdout.write("");
			process.stdout.write("\n");
			var _g22 = 0;
			var _g3 = e.value;
			while(_g22 < _g3.length) {
				var e1 = _g3[_g22];
				++_g22;
				var v1 = pad("" + e1.name + " : ") + e1.value;
				process.stdout.write(Std.string(v1));
				process.stdout.write("\n");
			}
		}
		process.stdout.write("");
		process.stdout.write("\n");
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	} else {
		var _g4 = 0;
		while(_g4 < commands.length) {
			var canditate = commands[_g4];
			++_g4;
			if(canditate.name == _g) {
				return canditate.exec(args);
			}
		}
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(new tink_core_TypedError(404,"unknown command " + _g,{ fileName : "Command.hx", lineNumber : 76, className : "switchx.Command", methodName : "dispatch"})));
	}
};
switchx_Command.prototype = {
	__class__: switchx_Command
};
var switchx_Download = function() { };
switchx_Download.__name__ = true;
switchx_Download.text = function(url) {
	return tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.bytes(url),function(b) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(b.toString()));
	});
};
switchx_Download.bytes = function(url) {
	return switchx_Download.download(url,function(r,cb) {
		switchx_Download.buffered(r)(cb);
	});
};
switchx_Download.buffered = function(r) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var ret = [];
		r.on("data",$bind(ret,$arrayPush));
		r.on("end",function() {
			var tmp = tink_core_Outcome.Success(haxe_io_Bytes.ofData(js_node_buffer_Buffer.concat(ret)));
			cb(tmp);
		});
	});
};
switchx_Download.archive = function(url,peel,into) {
	return switchx_Download.download(url,function(res,cb) {
		if(res.headers["content-type"] == "application/zip") {
			switchx_Download.unzip(url,into,peel,res,cb);
		} else {
			switchx_Download.untar(url,into,peel,res,cb);
		}
	});
};
switchx_Download.unzip = function(src,into,peel,res,cb) {
	tink_core__$Promise_Promise_$Impl_$.next(switchx_Download.buffered(res),function(bytes) {
		return tink_core__$Future_Future_$Impl_$.async(function(cb1) {
			var count = 1;
			var done = function() {
				haxe_Timer.delay(function() {
					if((count -= 1) == 0) {
						cb1(tink_core_Outcome.Success(into));
					}
				},100);
			};
			switchx_Yauzl.fromBuffer(new js_node_buffer_Buffer(bytes.b.bufferValue),function(err,zip) {
				if(err != null) {
					cb1(tink_core_Outcome.Failure(new tink_core_TypedError(422,"Failed to unzip " + src,{ fileName : "Download.hx", lineNumber : 56, className : "switchx.Download", methodName : "unzip"})));
				}
				zip.on("entry",function(entry) {
					var _g = switchx_Fs.peel(entry.fileName,peel);
					switch(_g[1]) {
					case 0:
						var path = "" + into + "/" + _g[2];
						if(!StringTools.endsWith(path,"/")) {
							switchx_Fs.ensureDir(path);
							zip.openReadStream(entry,function(e,stream) {
								count += 1;
								var out = js_node_Fs.createWriteStream(path);
								stream.pipe(out,{ end : true});
								out.on("close",done);
							});
						}
						break;
					case 1:
						break;
					}
				});
				zip.on("end",function() {
					zip.close();
					done();
				});
			});
		});
	})(cb);
};
switchx_Download.untar = function(src,into,peel,res,cb) {
	res.pipe(js_node_Zlib.createGunzip()).pipe(switchx_Tar.Extract({ path : into, strip : peel})).on("error",function(e) {
		cb(tink_core_Outcome.Failure(new tink_core_TypedError(422,"Failed to untar " + src + " into " + into + " because " + Std.string(e),{ fileName : "Download.hx", lineNumber : 85, className : "switchx.Download", methodName : "untar"})));
	}).on("close",function() {
		cb(tink_core_Outcome.Success(into));
	});
};
switchx_Download.tar = function(url,peel,into) {
	var a1 = url;
	var a2 = into;
	var a3 = peel;
	return switchx_Download.download(url,function(a4,cb) {
		switchx_Download.untar(a1,a2,a3,a4,cb);
	});
};
switchx_Download.zip = function(url,peel,into) {
	var a1 = url;
	var a2 = into;
	var a3 = peel;
	return switchx_Download.download(url,function(a4,cb) {
		switchx_Download.unzip(a1,a2,a3,a4,cb);
	});
};
switchx_Download.download = function(url,handler) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var options = js_node_Url.parse(url);
		options.agent = false;
		if(options.headers == null) {
			options.headers = { };
		}
		options.headers["user-agent"] = switchx_Download.USER_AGENT;
		var fail = function(e) {
			var fail1 = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,"Failed to download " + url + " because " + e.message,e,{ fileName : "Download.hx", lineNumber : 109, className : "switchx.Download", methodName : "download"}));
			cb(fail1);
		};
		var req = StringTools.startsWith(url,"https:") ? js_node_Https.get(options) : js_node_Http.get(options);
		req.setTimeout(30000);
		req.on("error",fail);
		req.on("response",function(res) {
			var _g = res.headers["location"];
			if(_g == null) {
				res.on("error",fail);
				handler(res,function(v) {
					switch(v[1]) {
					case 0:
						cb(tink_core_Outcome.Success(v[2]));
						break;
					case 1:
						cb(tink_core_Outcome.Failure(v[2]));
						break;
					}
				});
			} else {
				switchx_Download.download(js_node_Url.parse(_g).protocol == null ? options.protocol + "//" + options.host + _g : _g,handler)(cb);
			}
		});
	});
};
var switchx_Fs = function() { };
switchx_Fs.__name__ = true;
switchx_Fs.ensureDir = function(dir) {
	var isDir = StringTools.endsWith(dir,"/") || StringTools.endsWith(dir,"\\");
	if(isDir) {
		dir = haxe_io_Path.removeTrailingSlashes(dir);
	}
	var parent = haxe_io_Path.directory(dir);
	if(haxe_io_Path.removeTrailingSlashes(parent) == dir) {
		return;
	}
	if(!sys_FileSystem.exists(parent)) {
		switchx_Fs.ensureDir(haxe_io_Path.addTrailingSlash(parent));
	}
	if(isDir && !sys_FileSystem.exists(dir)) {
		sys_FileSystem.createDirectory(dir);
	}
};
switchx_Fs.peel = function(file,depth) {
	var start = 0;
	var _g1 = 0;
	while(_g1 < depth) {
		++_g1;
		var _g2 = file.indexOf("/",start);
		if(_g2 == -1) {
			return haxe_ds_Option.None;
		} else {
			start = _g2 + 1;
		}
	}
	return haxe_ds_Option.Some(HxOverrides.substr(file,start,null));
};
var switchx_Tar = require("tar");
var switchx_Yauzl = require("yauzl");
var sys_FileSystem = function() { };
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _ ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
var tink__$Url_Url_$Impl_$ = {};
tink__$Url_Url_$Impl_$.__name__ = true;
tink__$Url_Url_$Impl_$.toString = function(this1) {
	if(this1.scheme == null) {
		return this1.payload;
	} else {
		return "" + this1.scheme + ":" + this1.payload;
	}
};
tink__$Url_Url_$Impl_$.parse = function(s) {
	if(s == null) {
		return tink__$Url_Url_$Impl_$.parse("");
	}
	s = StringTools.trim(s);
	if(StringTools.startsWith(s,"data:")) {
		return { scheme : "data", payload : HxOverrides.substr(s,5,null)};
	}
	var FORMAT = new EReg("^(([a-zA-Z][a-zA-Z0-9\\-]*):)?((//(([^@/]+)@)?([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?)$","");
	var HOST = new EReg("^(\\[(.*)\\]|([^:]*))(:(\\d*))?$","");
	FORMAT.match(s);
	var hosts;
	var _g = FORMAT.matched(7);
	if(_g == null) {
		hosts = [];
	} else {
		var _g1 = [];
		var _g11 = 0;
		var _g2 = _g.split(",");
		while(_g11 < _g2.length) {
			var host = _g2[_g11];
			++_g11;
			HOST.match(host);
			var host1;
			var _g3 = HOST.matched(2);
			var _g4 = HOST.matched(3);
			if(_g3 == null) {
				host1 = _g4;
			} else if(_g4 == null) {
				host1 = "[" + _g3 + "]";
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
			var port;
			var _g5 = HOST.matched(5);
			if(_g5 == null) {
				port = null;
			} else {
				var _g51 = Std.parseInt(_g5);
				if(_g51 == null) {
					throw new js__$Boot_HaxeError("Invalid port");
				} else {
					port = _g51;
				}
			}
			var this1;
			if(port == null) {
				this1 = host1;
			} else if(port > 65535 || port <= 0) {
				throw new js__$Boot_HaxeError("Invalid port");
			} else {
				this1 = "" + host1 + ":" + port;
			}
			_g1.push(this1);
		}
		hosts = _g1;
	}
	var path = FORMAT.matched(8);
	if(hosts.length > 0 && path.charAt(0) != "/") {
		path = "/" + path;
	}
	return { scheme : FORMAT.matched(2), payload : FORMAT.matched(3), host : hosts[0], hosts : hosts, auth : FORMAT.matched(6), path : tink_url__$Path_Path_$Impl_$.ofString(path), query : FORMAT.matched(10), hash : FORMAT.matched(12)};
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	process.nextTick(f);
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var ret = new Array(1);
	ret[0] = cb;
	var cell = ret;
	this1.push(cell);
	return function() {
		if(HxOverrides.remove(this1,cell)) {
			cell[0] = null;
		}
		cell = null;
	};
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell[0] != null) {
			cell[0](data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell[0] = null;
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( $e0 ) {
		if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
		if( js_Boot.__instanceof($e0,tink_core_TypedError) ) {
			var e = $e0;
			return tink_core_Outcome.Failure(e);
		} else {
		var e1 = $e0;
		return tink_core_Outcome.Failure(report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1));
		}
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw new js__$Boot_HaxeError(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = true;
tink_core__$Future_Future_$Impl_$._new = function(f) {
	return f;
};
tink_core__$Future_Future_$Impl_$.gather = function(this1) {
	var op = new tink_core_FutureTrigger();
	var self = this1;
	return tink_core__$Future_Future_$Impl_$._new(function(cb) {
		if(self != null) {
			this1($bind(op,op.trigger));
			self = null;
		}
		return op.future(cb);
	});
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = tink_core__$Future_Future_$Impl_$._new(function(callback) {
		return this1(function(result) {
			var data = f(result);
			callback(data);
		});
	});
	if(gather) {
		return tink_core__$Future_Future_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = tink_core__$Future_Future_$Impl_$.flatten(tink_core__$Future_Future_$Impl_$.map(this1,next,gather));
	if(gather) {
		return tink_core__$Future_Future_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return tink_core__$Future_Future_$Impl_$._new(function(callback) {
		var ret = null;
		ret = f(function(next) {
			ret = next(function(result) {
				callback(result);
			});
		});
		return ret;
	});
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return tink_core__$Future_Future_$Impl_$._new(function(cb) {
		cb(l());
		return null;
	});
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return tink_core__$Future_Future_$Impl_$._new(function(callback) {
		callback(v);
		return null;
	});
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		var f1 = f;
		return tink_core__$Future_Future_$Impl_$.flatten(tink_core__$Future_Future_$Impl_$.lazy(tink_core__$Lazy_Lazy_$Impl_$.ofFunc(function() {
			return tink_core__$Future_Future_$Impl_$.async(f1,false);
		})));
	} else {
		var op = new tink_core_FutureTrigger();
		f($bind(op,op.trigger));
		return op.future;
	}
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	return tink_core__$Future_Future_$Impl_$.flatMap(f,function(o) {
		switch(o[1]) {
		case 0:
			return map(o[2]);
		case 1:
			return tink_core__$Future_Future_$Impl_$.sync(tink_core_Outcome.Failure(o[2]));
		}
	});
};
var tink_core_FutureTrigger = function() {
	var _gthis = this;
	this.list = [];
	this.future = tink_core__$Future_Future_$Impl_$._new(function(callback) {
		if(_gthis.list == null) {
			callback(_gthis.result);
			return null;
		} else {
			return tink_core__$Callback_CallbackList_$Impl_$.add(_gthis.list,callback);
		}
	});
};
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.prototype = {
	trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			if(tink_core_FutureTrigger.depth >= 1000) {
				tink_core__$Callback_Callback_$Impl_$.defer(function() {
					tink_core_FutureTrigger.depth++;
					tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
					tink_core__$Callback_CallbackList_$Impl_$.clear(list);
					tink_core_FutureTrigger.depth--;
				});
			} else {
				tink_core_FutureTrigger.depth++;
				tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
				tink_core__$Callback_CallbackList_$Impl_$.clear(list);
				tink_core_FutureTrigger.depth--;
			}
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = true;
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	var result = null;
	return function() {
		if(f != null) {
			result = f();
			f = null;
		}
		return result;
	};
};
var tink_core_NamedWith = function() { };
tink_core_NamedWith.__name__ = true;
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var tink_core_Noise = { __ename__ : true, __constructs__ : ["Noise"] };
tink_core_Noise.Noise = ["Noise",0];
tink_core_Noise.Noise.toString = $estr;
tink_core_Noise.Noise.__enum__ = tink_core_Noise;
var tink_core_Outcome = { __ename__ : true, __constructs__ : ["Success","Failure"] };
tink_core_Outcome.Success = function(data) { var $x = ["Success",0,data]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
tink_core_Outcome.Failure = function(failure) { var $x = ["Failure",1,failure]; $x.__enum__ = tink_core_Outcome; $x.toString = $estr; return $x; };
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	});
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f) {
	return tink_core__$Future_Future_$Impl_$._tryFailingFlatMap(this1,function(result) {
		return f(result);
	});
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return tink_core__$Future_Future_$Impl_$.sync(o);
};
var tink_url__$Path_Path_$Impl_$ = {};
tink_url__$Path_Path_$Impl_$.__name__ = true;
tink_url__$Path_Path_$Impl_$.parts = function(this1) {
	var _g = [];
	var _g1 = 0;
	var _g2 = this1.split("/");
	while(_g1 < _g2.length) {
		var p = _g2[_g1];
		++_g1;
		if(p != "") {
			_g.push(p);
		}
	}
	return _g;
};
tink_url__$Path_Path_$Impl_$.ofString = function(s) {
	return tink_url__$Path_Path_$Impl_$.normalize(s);
};
tink_url__$Path_Path_$Impl_$.normalize = function(s) {
	s = StringTools.trim(StringTools.replace(s,"\\","/"));
	if(s == ".") {
		return "./";
	}
	var isDir = StringTools.endsWith(s,"/..") || StringTools.endsWith(s,"/") || StringTools.endsWith(s,"/.");
	var parts = [];
	var isAbsolute = StringTools.startsWith(s,"/");
	var up = 0;
	var _g = 0;
	var _g1 = s.split("/");
	while(_g < _g1.length) {
		var part = _g1[_g];
		++_g;
		var _g2 = StringTools.trim(part);
		switch(_g2) {
		case "":
			break;
		case ".":
			break;
		case "..":
			if(parts.pop() == null) {
				++up;
			}
			break;
		default:
			parts.push(_g2);
		}
	}
	if(isAbsolute) {
		parts.unshift("");
	} else {
		var _g11 = 0;
		var _g3 = up;
		while(_g11 < _g3) {
			++_g11;
			parts.unshift("..");
		}
	}
	if(isDir) {
		parts.push("");
	}
	return parts.join("/");
};
var tink_url__$Portion_Portion_$Impl_$ = {};
tink_url__$Portion_Portion_$Impl_$.__name__ = true;
tink_url__$Portion_Portion_$Impl_$.stringly = function(this1) {
	return tink_url__$Portion_Portion_$Impl_$.toString(this1);
};
tink_url__$Portion_Portion_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return null;
	} else {
		return decodeURIComponent(this1.split("+").join(" "));
	}
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPush(x) { this.push(x); }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
haxeshim_Scope.IS_WINDOWS = Sys.systemName() == "Windows";
haxeshim_Scope.CONFIG_FILE = ".haxerc";
haxeshim_Scope.DEFAULT_ROOT = (function($this) {
	var $r;
	var _g = process.env["HAXESHIM_ROOT"];
	$r = _g == null ? process.env[haxeshim_Scope.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : _g == "" ? process.env[haxeshim_Scope.IS_WINDOWS ? "APPDATA" : "HOME"] + "/haxe" : _g;
	return $r;
}(this));
haxeshim_HaxeInstallation.EXT = haxeshim_Scope.IS_WINDOWS ? ".exe" : "";
js_Boot.__toStr = ({ }).toString;
switchx_Download.USER_AGENT = "switchx";
tink_core_FutureTrigger.depth = 0;
lix_client_Cli.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
